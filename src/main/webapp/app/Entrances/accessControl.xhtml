
<ui:composition template="/WEB-INF/templates.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="jakarta.faces.html"
                xmlns:f="jakarta.faces.core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="jakarta.faces.facelets">
    <ui:define name="title">Access Control Test</ui:define>

    <ui:define name ="content">
        <!--Main Content --> 
        <div class="main-content">
            <h:form id="theForm" class="ui-container" prependId="false">
                <p:growl widgetVar="fgrowl" id="growl" showDetail="true" life="3000" />

                <p:panel header="ACCESS CONTROL TEST" style="width: 600px; margin: auto; margin-top:50px; height:auto; text-align: center;">

                    <!-- Searchable Dropdown for Entrances -->
                    <h:outputLabel for="entrance" value="Select Entrance:"  style="font-size: large; font-weight: bolder;"/>
                    <p:autoComplete id="entrance" 
                                    value="#{accessBean.selectedEntrance}" 
                                    completeMethod="#{accessBean.completeEntrances}" 
                                    dropdown="true" 
                                    placeholder="Type to search entrances..." 
                                    minQueryLength="1" 
                                    style="width: 100%;">
                        <f:selectItem itemLabel="Select an entrance" itemValue="" noSelectionOption="true" />
                    </p:autoComplete>
                    <br/><br/><br/>

                    <!-- Ghana Card Input -->
                    <h:outputLabel for="ghanaCard" value="Enter Ghana Card here" style="font-size: large; font-weight: bolder;"/>
                    <br/>
                    <p:inputText id="ghanaCardPin" value="#{accessBean.ghanaCardNumber}"
                                 placeholder="GHA-XXXXXXXXX-X"/>

                    <br/><br/><br/>
                    <!-- Finger Selection -->
                    <h:outputLabel for="position" value="Select a Finger" style="font-size: large; font-weight: bolder;"/>
                    <br/>
                    <p:selectOneMenu id="position" value="#{accessBean.fingerPosition}" widgetVar="position">
                        <f:selectItem itemLabel="-- Select Finger --" itemValue="" noSelectionOption="true"/>
                        <f:selectItem itemLabel="Left Thumb" itemValue="LT"/>
                        <f:selectItem itemLabel="Left Index" itemValue="LI"/>
                        <f:selectItem itemLabel="Left Middle" itemValue="LM"/>
                        <f:selectItem itemLabel="Left Ring" itemValue="LR"/>
                        <f:selectItem itemLabel="Left Little" itemValue="LL"/>
                        <f:selectItem itemLabel="Right Thumb" itemValue="RT"/>
                        <f:selectItem itemLabel="Right Index" itemValue="RI"/>
                        <f:selectItem itemLabel="Right Middle" itemValue="RM"/>
                        <f:selectItem itemLabel="Right Ring" itemValue="RR"/>
                        <f:selectItem itemLabel="Right Little" itemValue="RL"/>
                    </p:selectOneMenu>

                    <br/><br/><br/>

                    <!-- Fingerprint Image Preview -->
                    <h:outputLabel value="Fingerprint Image" style="font-size: large; font-weight: bolder;"/>
                    <br/>

                    <div style="border: 2px solid black; padding: 5px; border-radius: 8px; display: inline-block;">
                        <h:graphicImage id="fingerImage" value="/resources/images/fing.jpeg" width="99.9" height="100"/>
                    </div>

                    <h:inputHidden id="fingerData" value="#{accessBean.capturedFinger}"/>
                    <br/><br/><br/>

                    <!-- Buttons -->
                    <div style="display:flex; flex-direction: row; gap: 5px; justify-content: space-between;">
                        <p:commandButton value="Reset" style="margin-right: 10px;" styleClass=" ui-button-warning ui-button-danger" onclick="doSendNoId('action:stop')" action="#{accessBean.reset}" update="@form" icon="pi pi-refresh"/>
                        <p:commandButton value="Capture Finger" style="margin-right: 0px;" styleClass=" ui-button-secondary ui-button-raised" onclick="doSend('action:start:single');" type="button" icon="fa fa-thin fa-fingerprint fa-beat"/>
                        <p:commandButton value="Check Access" 
                                         icon="pi pi-lock"
                                         action="#{accessBean.submit}" 
                                         update="growl statusBox" 
                                         ajax="true" 
                                         oncomplete="updateStatusBox()" 
                                         styleClass="ui-button-success" 
                                         iconPos="right" />                    <h:inputText id="socketData" style="display: none;" value="#{accessBean.socketData}" disabled="true"/>
                        <h:inputHidden id="socketDataHidden"/>
                    </div>


                </p:panel>

                <!-- Animated Status Box -->
                <p:panel id="statusBox" styleClass="status-box" widgetVar="statusBoxWidget">
                    <h:outputText value="#{accessBean.statusMessage}" />
                    <i class="fas fa-lock-open padlock padlock-unlocked" aria-hidden="true"></i>
                    <i class="fas fa-lock padlock padlock-locked" aria-hidden="true"></i>
                </p:panel>

                <p:remoteCommand name="resetFormCommand" 
                                 action="#{accessBean.resetForm}" 
                                 update="@form" 
                                 process="@this" />
            </h:form>
            <h:outputScript library="js" name="orbis.js" target="head"/>
            <h:outputScript library="js" name="updateStatusBox.js" target="head"/>
            <h:outputStylesheet library="css" name="accessControl.css"/>
        </div>
    </ui:define>
</ui:composition>
