<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>

<ui:composition template="/WEB-INF/templates.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="jakarta.faces.html"
                xmlns:f="jakarta.faces.core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="jakarta.faces.facelets">
    
    <ui:define name="metadata">
        <f:metadata>
            <f:viewAction action="#{assignRoleBean.setupBreadcrumb}" />
        </f:metadata>
    </ui:define>
    
    <ui:define name="title">Assign Roles to Entrance</ui:define>

    <ui:define name="metadata">             
        <f:metadata>
            <f:viewAction action="#{loginBean.checkAccess('ADMIN')}" />
        </f:metadata>
    </ui:define>


    <ui:define name ="content">
        <!--Main Content --> 
        <div class="main-content">
            <p:growl id="messages" showSummary= "true" showDetail="true" life="6000" />

            <h:form id="mainForm">
                <p:panel header="Assign Roles to Entrance" style="margin-top:20px;">
                    <p:panelGrid columns="2" style="width: 100%; align-items: center;" columnClasses="left-column,right-column">
                        <h:panelGroup>
                            <!-- Select Entrance -->
                            <p:outputLabel for="entrance" value="Select Entrance: " />
                            <p:autoComplete id="entrance" value="#{assignRoleBean.selectedEntrance}"
                                            completeMethod="#{assignRoleBean.searchEntrances}" 
                                            var="entrance" itemLabel="#{entrance.entranceName}" 
                                            itemValue="#{entrance}"
                                            converter="entranceConverter"
                                            forceSelection="true" dropdown="true"
                                            placeholder="Search or Select Entrance" 
                                            style="width: 100%; ">
                                <!-- Automatically load assigned roles when an entrance is selected -->
                                <p:ajax event="itemSelect" listener="#{assignRoleBean.loadAssignedRoles}" update="assignedRolesTable roles" />
                            </p:autoComplete>
                        </h:panelGroup>

                        <!-- Select Roles -->
                        <h:panelGroup style="display: flex; flex-direction: column; align-items: flex-start;">
                            <p:outputLabel for="roles" value="Select Roles: " />
                            <p:selectCheckboxMenu id="roles" value="#{assignRoleBean.selectedRolesIds}" multiple="true"
                                                  filter="true" panelStyle="width: 250px">
                                <f:selectItems value="#{assignRoleBean.availableRolesForSelection}" var="role"
                                               itemLabel="#{role.roleName}" itemValue="#{role.id}" />
                            </p:selectCheckboxMenu>
                        </h:panelGroup>
                    </p:panelGrid>


                    <!-- Submit Button -->
                    <div style="display: flex; justify-content: flex-end; margin-top: 10px;">
                        <p:commandButton value="Assign Roles" action="#{assignRoleBean.assignRolesToEntrance}" 
                                         update="messages assignedRolesTable" styleClass="assign-btn" />
                    </div>
                </p:panel>


                <div style="margin-top: 50px;"></div>

                <p:dataTable id="assignedRolesTable" value="#{assignRoleBean.assignedRoles}" var="role" style="margin-top: 10px;" 
                             rowIndexVar="rowIndex"  rowStyleClass="#{rowIndex mod 2 eq 0 ? 'white-row' : 'ash-row'}">  
                    <p:column headerText="Assigned Job Roles">
                        <h:outputText value="#{role.roleName}" />
                    </p:column>
                    <p:column headerText="Time Rules">
                        <!-- Show status when role has time rules -->
                        <h:panelGroup rendered="#{assignRoleBean.hasTimeRules(role)}">
                            <span style="color: #28a745; font-family: Times New Roman, serif; font-weight: bold;">
                                <i class="fa fa-check-circle" style="margin-right: 5px;"></i>
                                Role time access created
                            </span>
                        </h:panelGroup>

                        <!-- Show status when role has no time rules -->
                        <h:panelGroup rendered="#{!assignRoleBean.hasTimeRules(role)}">
                            <span style="color: #993333; font-family: Times New Roman, serif; font-weight: bold;">
                                <i class="fa fa-exclamation-triangle" style="margin-right: 5px;"></i>
                                No time access configured
                            </span>
                        </h:panelGroup>
                    </p:column>

                    <p:column headerText="Assign Time Rule">    
                        <p:commandButton  class="rounded-button ui-button-info ui-button-outlined"  icon="fa-solid fa-business-time" action="#{assignRoleBean.prepareDayTimeRules(role)}"
                                          update=":mainForm:sidebar2" oncomplete="PF('sidebar2').show()" process="@this" />
                    </p:column>
                    <p:column headerText="Remove">
                        <p:commandButton class="rounded-button ui-button-danger ui-button-outlined" 
                                         icon="pi pi-trash"                                        
                                         process="@this"
                                         actionListener="#{assignRoleBean.setCurrentRole(role)}"
                                         oncomplete="PF('confirmDialog').show()"
                                         update=":mainForm:confirmDialog"/>


                    </p:column>

                </p:dataTable>
                <p:dialog id="confirmDialog"
                          widgetVar="confirmDialog" 
                          showEffect="fade" 
                          width="300"
                          hideEffect="fade" 
                          header="Confirm"
                          modal="true">

                    <div class="confirm-message">
                        <span>Delete role </span>
                        <span class="role-name">#{assignRoleBean.currentRole.roleName}</span>
                        <span> and all time access to this entrance?</span>
                    </div>                    <br/><br/>
                    <div style="display:flex; flex-direction: row; justify-content: flex-end; gap: 10px;">
                        <p:commandButton value="Yes" 
                                         icon="pi pi-check" 
                                         actionListener="#{assignRoleBean.removeRole()}"
                                         process="@this" 
                                         oncomplete="PF('confirmDialog').hide()"
                                         update="assignedRolesTable messages"
                                         styleClass="rounded-button"
                                         style="padding: 1px 3px !important;"
                                         />
                        <p:commandButton value="No" 
                                         type="button" 
                                         styleClass="ui-button-secondary rounded-button" 
                                         icon="pi pi-times"
                                         onclick="PF('confirmDialog').hide()" />
                    </div>
                </p:dialog>


                <div class="card"> 
                    <p:sidebar id ="sidebar2" widgetVar="sidebar2" position="right" style="width: 30%; background-color: #f8f9fa;overflow:scroll "  blockScroll= "true" >
                        <div class="p-col-12">
                            <div class="same-line-container">
                                <i class="pi pi-user p-mr-2 text-primary icon-style"></i>
                                <p:outputLabel value="Role:" styleClass="label-style" />
                                <h:outputText value="#{assignRoleBean.dayRule.employeeRole.roleName}" styleClass="value-style" />
                            </div>
                            <br/>
                            <div class="same-line-container">
                                <i class="pi pi-map-marker p-mr-2 text-success icon-style"></i>
                                <p:outputLabel value="Entrance:" styleClass="label-style" />
                                <h:outputText value="#{assignRoleBean.dayRule.entrances.entranceName}" styleClass="value-style" />
                            </div>
                        </div>

                        <p:separator/>
                        <p:outputLabel value="Days"/>
                        <p:selectManyCheckbox value="#{assignRoleBean.selectedDays}" layout="grid" columns="3" id="daysCheckbox">
                            <f:selectItem itemLabel="Monday" itemValue="MONDAY" />
                            <f:selectItem itemLabel="Tuesday" itemValue="TUESDAY" />
                            <f:selectItem itemLabel="Wednesday" itemValue="WEDNESDAY" />
                            <f:selectItem itemLabel="Thursday" itemValue="THURSDAY" />
                            <f:selectItem itemLabel="Friday" itemValue="FRIDAY" />
                            <f:selectItem itemLabel="Saturday" itemValue="SATURDAY" />
                            <f:selectItem itemLabel="Sunday" itemValue="SUNDAY" />
                            <p:ajax event="valueChange"
                                    listener="#{assignRoleBean.loadDayTimeInputs}"
                                    update="dayTimeInputs"
                                    process="@this" />
                        </p:selectManyCheckbox>

                        <p:spacer height="10px"/>

                        <h:panelGroup id="dayTimeInputs" layout="block">
                            <h3 class="section-title">
                                <i class="pi pi-calendar" style="margin-right:8px;color:#22C55E;" />
                                Assign Time Range For Days
                            </h3>
                            <ui:repeat value="#{assignRoleBean.selectedDays}" var="day">
                                <div class="day-time-block">
                                    <!-- Day label -->
                                    <h:outputText value="#{day}" styleClass="day-title" />
                                    <div class="time-row">
                                        <div class="time-group">
                                            <i class="pi pi-clock" style="color:#6366F1;" />
                                            <p:outputLabel value="Start:" styleClass="label-style" />
                                            <p:datePicker id="startTime"
                                                          value="#{assignRoleBean.startTimes[day]}"
                                                          timeOnly="true"
                                                          placeholder="HH:MM"
                                                          pattern="HH:mm"
                                                          hourFormat="12"
                                                          showTime="true"
                                                          showIcon="false"
                                                          stepMinute="1"
                                                          styleClass="small-time-picker" />
                                        </div>
                                        <div class="time-group">
                                            <i class="pi pi-clock" style="color:#EF4444;" />
                                            <p:outputLabel value="End:" styleClass="label-style" />
                                            <p:datePicker id="endTime"
                                                          value="#{assignRoleBean.endTimes[day]}"
                                                          timeOnly="true"
                                                          placeholder="HH:MM"
                                                          pattern="HH:mm"
                                                          hourFormat="12"
                                                          showTime="true"
                                                          showIcon="false"
                                                          stepMinute="1"
                                                          styleClass="small-time-picker" />
                                        </div>
                                    </div>
                                </div>
                                <p:spacer height="10px"/>
                            </ui:repeat>
                        </h:panelGroup>

                        <div class="dialog-footer">
                            <p:commandButton value="Save Rule" icon="pi pi-save" 
                                             action="#{assignRoleBean.saveDayTimeRules}" 
                                             update="assignedRolesTable messages" 
                                             oncomplete="if (#{assignRoleBean.timeRuleValid})PF('sidebar2').hide()" 
                                             styleClass="save" />
                        </div>
                    </p:sidebar>
                </div>
            </h:form>
        </div>
        <style>
            .confirm-message {
                line-height: 1.5;
            }
            .role-name {
                font-weight: bold;
                color: #2563eb; /* Optional: adds a blue color to make it stand out more */
            }
            .left-column {
                width: 50%;
                padding-right: 20px;
            }            

            .right-column {
                width: 50%;
                text-align: right;
            }

            .ui-button {
                border-radius: 8px;
/*                padding: 10px;*/
                font-weight: bold;
            }
            .ui-autocomplete .ui-autocomplete-dropdown {
                position: absolute !Important;
                height:100% !Important;
            }


            .ui-panel {
                background-color: #f5f5f5;
                border-radius: 10px;
                padding: 20px;
                box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            }

            .assign-btn {
                background-color: #008000 !important;
                color: white !important;
                border-radius: 8px;
                font-weight: bold;
                padding: 0px 5px;
            }
            .remove-btn {
                background-color: red !important;
                color: white !important;
            }
            .ui-selectCheckboxMenu {
                padding: 10px;
                border-radius: 8px;
                background-color: white;
            }
            .ui-datatable {
                background-color: white;
                border-radius: 8px;
            }

            .load-btn {
                background-color: whitesmoke !important; /* Blue color */
                color: black !important;
                border-radius: -5px;
                padding: 0px 5px;
                font-weight: bold;
                transition: background 0.3s ease;
            }

            .load-btn:hover {
                background-color: lightgreen !important; /* Darker blue on hover */
            }

            .pi-refresh {
                margin-right: 5px; /* Adds spacing between icon and text */
            }

            .access-control-container {
                border: 2px solid bisque;
                display: block !important;
            }

            .test-access-btn {
                position: absolute;
                top: 50%;
                right: 20px;
                transform: translateY(-50%);
                background-color: #4CAF50;
                color: white;
                padding: 10px 15px;
                border-radius: 5px;
                box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
                cursor: pointer;
            }

            .test-access-btn:hover {
                background-color: black;
            }
            .time-rule-dialog .p-panel {
                background-color: #f8f9fa;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            }
            .time-rule-dialog .p-field {
                margin-bottom: 1rem;
            }
            .time-rule-dialog .p-selectmanyCheckbox {
                flex-grow: 1;
            }
            /* Dialog styling */
            .time-rule-dialog {
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            }


            .time-rule-dialog .ui-dialog-titlebar {
                background: #4F46E5;
                color: white;
                padding: 14px 20px;
                font-weight: 600;
            }

            .dialog-content {
                padding: 16px;
            }

            .dialog-section {
                margin-bottom: 20px;
            }

            .section-title {
                font-size: 16px;
                color: #4B5563;
                margin: 0 0 12px 0;
                font-weight: 600;
                display: flex;
                align-items: center;
            }

            /* Field styling */
            .labelColumn {
                font-weight: 600;
                vertical-align: middle;
                padding-right: 15px;
                width: 35%;
                color: #374151;
            }
            .same-line-container {
                display: flex;
                align-items: center; /* Vertically align items in the container */
                gap: 10px; /* Adjust the spacing between the elements as needed */
            }

            .icon-style {
                font-size: 1.2rem; /* Apply the font size to all icons */
                margin-right: 0.5rem; /* Add a little space to the right of each icon */
                color:#644d12;
                ;
            }

            .label-style {
                font-weight: 600; /* Make the labels bold */
                color: #374151; /* Apply the label color */
            }

            .value-style {
                color: #111827; /* Apply the value color */
            }

            .valueColumn {
                color: #111827;
                width: 65%;
            }

            .field-value {
                font-weight: 500;
            }

            .field-label i {
                vertical-align: middle;
            }

            /* Days selection */
            .days-container {
                background: #F9FAFB;
                border-radius: 8px;
                padding: 15px 10px 10px;
            }

            .days-checkboxes {
                width: 100%;
            }

            .days-checkboxes .ui-selectmanycheckbox label {
                margin-right: 8px;
                padding: 6px 0;
                font-weight: 500;
            }

            .days-checkboxes .ui-chkbox-box {
                border-radius: 4px;
            }

            /* Footer */
            .dialog-footer {
                background: #F9FAFB;
                padding: 16px;
                display: flex;
                justify-content: flex-end;
                border-top: 1px solid #E5E7EB;
            }

            .p-dialog .ui-panelgrid td {
                padding: 10px 4px;
            }

            .custom-panelgrid {
                width: 100%;
            }

            .save {
                background-color: #2196f3;
                color: white !important;
                padding: 6px 4px !important;
            }
            .white-row {
                background-color: white !important;
            }

            .ash-row {
                background-color: white !important;
            }
            .white-row:hover, .ash-row:hover {
                background-color: #dceeff !important;
                cursor: pointer;
            }




            .day-row {
                margin-bottom: 20px; /* Space between days */
            }
            .day-title {
                font-weight: bold;
                font-size: 1.2em;
                margin-bottom: 8px;
                color: #333;
            }

            .time-row {
                display: flex;
                align-items: center;
                gap: 20px;
                flex-wrap: wrap;
                margin-top: 6px;
            }

            /* Align label, icon, and input within each group */
            .time-group {
                display: flex;
                align-items: center;
                gap: 6px;
            }

            /* Make the time input smaller and tighter */
            .small-time-picker .ui-inputfield {
                width: 100% !important;
                font-size: 0.75rem !important;
                padding: 4px 6px !important;
            }

            /* Optional: reduce margin around output labels */
            .label-style {
                font-size: 0.75rem;
                margin: 0;
            }
            @media (max-width: 600px) {
                .time-row {
                    flex-direction: column; /* Stack vertically on small screens */
                    align-items: flex-start;
                }
                .time-group .p-datepicker {
                    width: 100%; /* Full width on mobile */
                }
            }
        </style>


    </ui:define>
</ui:composition>
